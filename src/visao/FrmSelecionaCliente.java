package visao;

import controle.ConectaBanco;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import modelo.ModeloTabela;

/**
 *
 * @author cyro
 */
public class FrmSelecionaCliente extends javax.swing.JFrame {

    ConectaBanco conecta = new ConectaBanco();
    //ModeloTabela modelo = new ModeloTabela();
    SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
    DecimalFormat df = new DecimalFormat("0.00");
    PreparedStatement pst;
    ResultSet rs;
    Date data;
    Date hoje = new Date();
    float totalReceber = 0, resultado = 0, valorTotal = 0;

    public FrmSelecionaCliente() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        conecta.conexao();
        preencherTabelaDoDia();
        somaValores();
        Sair();
        setIcon();
        contasPagar();
        jlAtrasada.setVisible(false);
        jlAtrasadaTotal.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaClientes = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTotal = new javax.swing.JTextField();
        jButtonSair = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldSaldo = new javax.swing.JTextField();
        jTextFieldPagar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jlAtrasada = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jlAtrasadaTotal = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldParcela = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldRecebe = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldPesquisar = new javax.swing.JTextField();
        jrAtrasadas = new javax.swing.JRadioButton();
        jrDoDia = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Selecione o Cliente");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(0, 181, 181));
        jPanel1.setToolTipText("Selecionar Cliente");

        tabelaClientes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelaClientes.setForeground(new java.awt.Color(51, 51, 51));
        tabelaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaClientes.setGridColor(new java.awt.Color(255, 255, 255));
        tabelaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaClientesMouseClicked(evt);
            }
        });
        tabelaClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabelaClientesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaClientes);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 153, 153), new java.awt.Color(0, 153, 153)));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Total de receb√≠veis:");

        jTextFieldTotal.setEditable(false);
        jTextFieldTotal.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldTotal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 10, true));

        jButtonSair.setBackground(new java.awt.Color(255, 255, 255));
        jButtonSair.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jButtonSair.setForeground(new java.awt.Color(0, 153, 153));
        jButtonSair.setText("Sair (ESC)");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Contas a Pagar :");

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Saldo total:");

        jTextFieldSaldo.setEditable(false);
        jTextFieldSaldo.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldSaldo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 10, true));

        jTextFieldPagar.setEditable(false);
        jTextFieldPagar.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldPagar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 10, true));

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Quantidade de contas atrasadas:");

        jlAtrasada.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jlAtrasada.setForeground(new java.awt.Color(255, 255, 255));
        jlAtrasada.setText("0");

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Quantidade total de contas :");

        jlAtrasadaTotal.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jlAtrasadaTotal.setForeground(new java.awt.Color(255, 255, 255));
        jlAtrasadaTotal.setText("0");

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Total Parcela");

        jTextFieldParcela.setEditable(false);
        jTextFieldParcela.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldParcela.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 10, true));

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Total a recebe:");

        jTextFieldRecebe.setEditable(false);
        jTextFieldRecebe.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldRecebe.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 10, true));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jlAtrasada, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlAtrasadaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldRecebe, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(839, 839, 839)
                                .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jlAtrasada)
                    .addComponent(jLabel4)
                    .addComponent(jlAtrasadaTotal))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jTextFieldRecebe, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 153, 153), new java.awt.Color(0, 153, 153)));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Digite o nome do cliente:");

        jTextFieldPesquisar.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldPesquisar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 10, true));
        jTextFieldPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPesquisarActionPerformed(evt);
            }
        });
        jTextFieldPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPesquisarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPesquisarKeyReleased(evt);
            }
        });

        jrAtrasadas.setBackground(new java.awt.Color(0, 151, 151));
        buttonGroup1.add(jrAtrasadas);
        jrAtrasadas.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jrAtrasadas.setForeground(new java.awt.Color(255, 255, 255));
        jrAtrasadas.setText("Contas atrasadas");

        jrDoDia.setBackground(new java.awt.Color(0, 151, 151));
        buttonGroup1.add(jrDoDia);
        jrDoDia.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jrDoDia.setForeground(new java.awt.Color(255, 255, 255));
        jrDoDia.setText("Todas as contas");
        jrDoDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrDoDiaActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 153));
        jButton1.setText("Filtrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jrAtrasadas)
                .addGap(59, 59, 59)
                .addComponent(jrDoDia)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jrAtrasadas)
                    .addComponent(jButton1)
                    .addComponent(jrDoDia))
                .addGap(0, 32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaClientesMouseClicked

        if (evt.getClickCount() == 2) {

            JOptionPane.showMessageDialog(null, "Clicado duas vezes");
//        int cod = (int) tabelaClientes.getValueAt(tabelaClientes.getSelectedRow(),0);
//    
//    conecta.executaSQL("select * from venda inner join itens_venda_produto on venda.id_venda = itens_venda_produto.id_venda inner join produto on itens_venda_produto.id_produto = produto.id_produto   where itens_venda_produto.id_venda ="+cod);
//            try {
//                conecta.rs.first();
//                do {                    
//                    System.out.println(conecta.rs.getString("nome_produto"));
//                } while (conecta.rs.next());
//                
//            } catch (SQLException ex) {
//                Logger.getLogger(FrmSelecionaCliente.class.getName()).log(Level.SEVERE, null, ex);
//            }

        }
    }//GEN-LAST:event_tabelaClientesMouseClicked

    private void jTextFieldPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarKeyReleased
        conecta.conexao();

        try {
            conecta.executaSQL("select pv.cod_venda , pv.id_parc_venda , pv.id_cliente , c.nome_cliente , pv.valor_parc , pv.pago ,pv.valor_resta , pv.datavenc , pv.estado, c.apelido  from venda v inner join parcela_venda pv on v.id_venda = pv.cod_venda inner join clientes c on pv.id_cliente = c.id_cliente where c.nome_cliente like '" + jTextFieldPesquisar.getText() + "%' and pv.estado !='Pago' order by pv.datavenc asc");
            conecta.rs.first();

            preencherTabela();

//                pst = conecta.conn.prepareStatement(sql);
//                pst.setString(1, jTextFieldPesquisar.getText()+"%");
//                rs = pst.executeQuery();
//                
//                tabelaClientes.setModel(DbUtils.resultSetToTableModel(rs));
//                tabelaClientes.setRowHeight(30);
//                tabelaClientes.getColumnModel().getColumn(0).setPreferredWidth(96);
//                tabelaClientes.getColumnModel().getColumn(1).setPreferredWidth(96);
//                tabelaClientes.getColumnModel().getColumn(2).setPreferredWidth(96);
//                tabelaClientes.getColumnModel().getColumn(3).setPreferredWidth(200);
//                tabelaClientes.getColumnModel().getColumn(4).setPreferredWidth(110);
//                tabelaClientes.getColumnModel().getColumn(5).setPreferredWidth(100);
//                tabelaClientes.getColumnModel().getColumn(6).setPreferredWidth(100);
//                tabelaClientes.getColumnModel().getColumn(7).setPreferredWidth(130);
//                tabelaClientes.getColumnModel().getColumn(8).setPreferredWidth(130);
//                tabelaClientes.removeAll();
        } catch (SQLException ex) {

        } finally {

            conecta.desconecta();
        }
    }//GEN-LAST:event_jTextFieldPesquisarKeyReleased

    private void tabelaClientesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaClientesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            int cod = (int) tabelaClientes.getValueAt(tabelaClientes.getSelectedRow(), 1);

            FrmBaixaParcela b = new FrmBaixaParcela(cod);
            b.setVisible(true);
            dispose();

        }
    }//GEN-LAST:event_tabelaClientesKeyPressed

    private void jTextFieldPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPesquisarActionPerformed

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (jrAtrasadas.isSelected()) {

            preencherTabelaAtrasada();

        } else {

            preencherTabela();

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jrDoDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrDoDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrDoDiaActionPerformed

    private void jTextFieldPesquisarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            preencherTabelaDoDia();
        }
    }//GEN-LAST:event_jTextFieldPesquisarKeyPressed

    public void preencherTabela() {
        ArrayList dados = new ArrayList();

        String[] Colunas = new String[]{"Cod Venda", "Cod Parcela", "Cod Cliente", "Nome Cliente", "Valor Parcela", "Valor Pago", "Valor Restante", "Data Vencimento", "Apelido"};
        conecta.conexao();
        conecta.executaSQL("select pv.cod_venda , pv.id_parc_venda , pv.id_cliente , c.nome_cliente , pv.valor_parc , pv.pago ,pv.valor_resta , pv.datavenc , pv.estado, c.apelido  from venda v inner join parcela_venda pv on v.id_venda = pv.cod_venda inner join clientes c on pv.id_cliente = c.id_cliente where nome_cliente like '" + jTextFieldPesquisar.getText() + "%' and pv.estado !='Pago' order by pv.datavenc asc");

        try {
            if (conecta.rs.next()) {
                conecta.rs.first();

                do {
                    float valorParcela = conecta.rs.getFloat("valor_parc");
                    float valorPago = conecta.rs.getFloat("pago");
                    float valorResta = conecta.rs.getFloat("valor_resta");
                    data = conecta.rs.getDate("datavenc");
                    dados.add(new Object[]{conecta.rs.getInt("cod_venda"), conecta.rs.getInt("id_parc_venda"), conecta.rs.getInt("id_cliente"), conecta.rs.getString("nome_cliente"), df.format(valorParcela), df.format(valorPago), df.format(valorResta), sdf.format(data), conecta.rs.getString("apelido")});
                } while (conecta.rs.next());
                jlAtrasadaTotal.setVisible(true);
                jlAtrasadaTotal.setText(String.valueOf(dados.size()));
            } else {

                JOptionPane.showMessageDialog(null, "N√£o h√° parcelas");
            }
        } catch (Exception e) {

            //JOptionPane.showMessageDialog(null, "ERRO AO CONECTAR"+ e);
        } finally {

            conecta.desconecta();
        }

        ModeloTabela modelo = new ModeloTabela(dados, Colunas);

        tabelaClientes.setModel(modelo);
        tabelaClientes.getColumnModel().getColumn(0).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(0).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(1).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(1).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(2).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(2).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(3).setPreferredWidth(300);
        tabelaClientes.getColumnModel().getColumn(3).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(4).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(4).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(5).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(5).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(6).setPreferredWidth(100);
        tabelaClientes.getColumnModel().getColumn(6).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(7).setPreferredWidth(130);
        tabelaClientes.getColumnModel().getColumn(7).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(8).setPreferredWidth(180);
        tabelaClientes.getColumnModel().getColumn(8).setResizable(false);

        tabelaClientes.getTableHeader().setReorderingAllowed(false);
        tabelaClientes.setAutoResizeMode(tabelaClientes.AUTO_RESIZE_OFF);
        tabelaClientes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tabelaClientes.setRowHeight(30);

        somaValores();

    }

    public void preencherTabelaAtrasada() {
        ArrayList dados = new ArrayList();

        String[] Colunas = new String[]{"Cod Venda", "Cod Parcela", "Cod Cliente", "Nome Cliente", "Valor Parcela", "Valor Pago", "Valor Restante", "Data Vencimento", "Apelido"};
        conecta.conexao();
        conecta.executaSQL("select pv.cod_venda , pv.id_parc_venda , pv.id_cliente , c.nome_cliente , pv.valor_parc , pv.pago ,pv.valor_resta , pv.datavenc , pv.estado, c.apelido  from venda v inner join parcela_venda pv on v.id_venda = pv.cod_venda inner join clientes c on pv.id_cliente = c.id_cliente where datavenc < current_date() and pv.estado !='Pago' order by pv.datavenc asc");

        try {
            if (conecta.rs.next()) {
                conecta.rs.first();

                do {
                    float valorParcela = conecta.rs.getFloat("valor_parc");
                    float valorPago = conecta.rs.getFloat("pago");
                    float valorResta = conecta.rs.getFloat("valor_resta");
                    data = conecta.rs.getDate("datavenc");
                    dados.add(new Object[]{conecta.rs.getInt("cod_venda"), conecta.rs.getInt("id_parc_venda"), conecta.rs.getInt("id_cliente"), conecta.rs.getString("nome_cliente"), df.format(valorParcela), df.format(valorPago), df.format(valorResta), sdf.format(data), conecta.rs.getString("apelido")});
                } while (conecta.rs.next());
                jlAtrasada.setVisible(true);
                jlAtrasada.setText(String.valueOf(dados.size()));

            } else {

                JOptionPane.showMessageDialog(null, "N√£o h√° parcelas em atraso");
            }

        } catch (Exception e) {

            //JOptionPane.showMessageDialog(null, "ERRO AO CONECTAR"+ e);
        } finally {

            conecta.desconecta();
        }

        ModeloTabela modelo = new ModeloTabela(dados, Colunas);

        tabelaClientes.setModel(modelo);
        tabelaClientes.getColumnModel().getColumn(0).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(0).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(1).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(1).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(2).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(2).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(3).setPreferredWidth(300);
        tabelaClientes.getColumnModel().getColumn(3).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(4).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(4).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(5).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(5).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(6).setPreferredWidth(100);
        tabelaClientes.getColumnModel().getColumn(6).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(7).setPreferredWidth(130);
        tabelaClientes.getColumnModel().getColumn(7).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(8).setPreferredWidth(180);
        tabelaClientes.getColumnModel().getColumn(8).setResizable(false);

        tabelaClientes.getTableHeader().setReorderingAllowed(false);
        tabelaClientes.setAutoResizeMode(tabelaClientes.AUTO_RESIZE_OFF);
        tabelaClientes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tabelaClientes.setRowHeight(30);

    }

    public void preencherTabelaDoDia() {
        ArrayList dados = new ArrayList();

        String[] Colunas = new String[]{"Cod Venda", "Cod Parcela", "Cod Cliente", "Nome Cliente", "Valor Parcela", "Valor Pago", "Valor Restante", "Data Vencimento", "Apelido"};
        conecta.conexao();
        conecta.executaSQL("select pv.cod_venda , pv.id_parc_venda , pv.id_cliente , c.nome_cliente , pv.valor_parc , pv.pago ,pv.valor_resta , pv.datavenc , pv.estado, c.apelido  from venda v inner join parcela_venda pv on v.id_venda = pv.cod_venda inner join clientes c on pv.id_cliente = c.id_cliente where pv.datavenc = current_date() and pv.estado !='Pago'");

        try {
            if (conecta.rs.next()) {
                conecta.rs.first();

                do {
                    float valorParcela = conecta.rs.getFloat("valor_parc");
                    float valorPago = conecta.rs.getFloat("pago");
                    float valorResta = conecta.rs.getFloat("valor_resta");
                    data = conecta.rs.getDate("datavenc");
                    dados.add(new Object[]{conecta.rs.getInt("cod_venda"), conecta.rs.getInt("id_parc_venda"), conecta.rs.getInt("id_cliente"), conecta.rs.getString("nome_cliente"), df.format(valorParcela), df.format(valorPago), df.format(valorResta), sdf.format(data), conecta.rs.getString("apelido")});
                } while (conecta.rs.next());
                JOptionPane.showMessageDialog(null, "parcelas para receber  : " + dados.size());
            } else {

                JOptionPane.showMessageDialog(null, "N√£o h√° parcelas para Hoje");
            }

        } catch (Exception e) {

            //JOptionPane.showMessageDialog(null, "ERRO AO CONECTAR"+ e);
        } finally {

            conecta.desconecta();
        }

        ModeloTabela modelo = new ModeloTabela(dados, Colunas);

        tabelaClientes.setModel(modelo);
        tabelaClientes.getColumnModel().getColumn(0).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(0).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(1).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(1).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(2).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(2).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(3).setPreferredWidth(300);
        tabelaClientes.getColumnModel().getColumn(3).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(4).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(4).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(5).setPreferredWidth(120);
        tabelaClientes.getColumnModel().getColumn(5).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(6).setPreferredWidth(100);
        tabelaClientes.getColumnModel().getColumn(6).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(7).setPreferredWidth(130);
        tabelaClientes.getColumnModel().getColumn(7).setResizable(false);
        tabelaClientes.getColumnModel().getColumn(8).setPreferredWidth(180);
        tabelaClientes.getColumnModel().getColumn(8).setResizable(false);

        tabelaClientes.getTableHeader().setReorderingAllowed(false);
        tabelaClientes.setAutoResizeMode(tabelaClientes.AUTO_RESIZE_OFF);
        tabelaClientes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tabelaClientes.setRowHeight(30);

    }

    public void somaValores() {

        conecta.conexao();
        conecta.executaSQL("select pv.cod_venda , pv.id_parc_venda , "
                + "pv.id_cliente , c.nome_cliente , pv.valor_parc , pv.pago ,"
                + "pv.valor_resta , pv.datavenc , pv.estado,"
                + " c.apelido  from venda"
                + " v inner join parcela_venda pv on v.id_venda = pv.cod_venda inner join clientes c on pv.id_cliente = c.id_cliente where"
                + " nome_cliente like '" + jTextFieldPesquisar.getText() + "%' and pv.estado !='Pago' order by pv.datavenc asc");
        float valorResta = 0;
        float valorParcela = 0;
        float valorPago = 0;
        float ValorRecebe = 0;
        float resul = 0;
        resultado = 0;
        try {
            conecta.rs.first();

            do {

                valorResta = valorResta + conecta.rs.getFloat("valor_resta");
                valorParcela = valorParcela + conecta.rs.getFloat("valor_parc");
                valorPago = valorPago + conecta.rs.getFloat("pago");
                ValorRecebe = ValorRecebe + conecta.rs.getFloat("valor_resta");
                resultado = valorPago;
                resul = valorParcela;
                valorTotal = valorParcela - valorPago;
                //resultado = valorParcela - valorResta;

            } while (conecta.rs.next());
            jTextFieldTotal.setText(String.valueOf(df.format(resultado)).replace(".", ","));
            jTextFieldParcela.setText(String.valueOf(df.format(resul)).replace(".", ","));
            jTextFieldRecebe.setText(String.valueOf(df.format(valorTotal).replace(".", ",")));

        } catch (SQLException ex) {
            Logger.getLogger(FrmSelecionaCliente.class.getName()).log(Level.SEVERE, null, ex);
        } finally {

            conecta.desconecta();
        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmSelecionaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmSelecionaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmSelecionaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmSelecionaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmSelecionaCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldPagar;
    private javax.swing.JTextField jTextFieldParcela;
    private javax.swing.JTextField jTextFieldPesquisar;
    private javax.swing.JTextField jTextFieldRecebe;
    private javax.swing.JTextField jTextFieldSaldo;
    private javax.swing.JTextField jTextFieldTotal;
    private javax.swing.JLabel jlAtrasada;
    private javax.swing.JLabel jlAtrasadaTotal;
    private javax.swing.JRadioButton jrAtrasadas;
    private javax.swing.JRadioButton jrDoDia;
    private javax.swing.JTable tabelaClientes;
    // End of variables declaration//GEN-END:variables

    private void Sair() {
        javax.swing.InputMap inputMap = this.getRootPane().getInputMap(javax.swing.JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "escape");
        this.getRootPane().setInputMap(javax.swing.JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("escape", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            public void actionPerformed(ActionEvent arg0) {
                jButtonSair.doClick();
            }
        });
    }

    private void contasPagar() {
        conecta.conexao();
        conecta.executaSQL("select sum(valor_parc) as 'valor' from parcela_compra where estado ='NAO'");
        try {

            if (conecta.rs.next()) {

                conecta.rs.first();
                totalReceber = conecta.rs.getFloat("valor");
                jTextFieldPagar.setText(String.valueOf(df.format(totalReceber)));
                jTextFieldSaldo.setText(String.valueOf(df.format(resultado - totalReceber)));

            } else {

                //JOptionPane.showMessageDialog(null, "N√£o existem contas a pagar registradas");
                jTextFieldSaldo.setText(String.valueOf(df.format(resultado)));
                jTextFieldPagar.setText("Sem Registros");
            }

        } catch (SQLException ex) {
            Logger.getLogger(FrmSelecionaCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
    }
}
